<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.syt.passport.mapper.AdminMapper">
    <!--    int insert(Admin admin);-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into ams_admin (username, password, nickname,
                               avatar, phone, email,
                               description, enable,
                               last_login_ip, login_count,
                               gmt_last_login)
        VALUES (#{username}, #{password}, #{nickname},
                #{avatar}, #{phone}, #{email},
                #{description}, #{enable},
                #{lastLoginIp}, #{loginCount},
                #{gmtLastLogin})
    </insert>


    <!--    * 通过id删除-->
    <!--    int deleteById(Long id);-->
    <delete id="deleteById">
        DELETE
        FROM ams_admin
        WHERE id = #{id}
    </delete>

    <!-- int updateById(Admin admin); -->
    <update id="updateById">
        UPDATE ams_admin
        <set>
            <if test="username != null">
                username=#{username},
            </if>
            <if test="password != null">
                password=#{password},
            </if>
            <if test="nickname != null">
                nickname=#{nickname},
            </if>
            <if test="avatar != null">
                avatar=#{avatar},
            </if>
            <if test="phone != null">
                phone=#{phone},
            </if>
            <if test="email != null">
                email=#{email},
            </if>
            <if test="description != null">
                description=#{description},
            </if>
            <if test="enable != null">
                enable=#{enable},
            </if>
            <if test="lastLoginIp != null">
                last_login_ip=#{lastLoginIp},
            </if>
            <if test="loginCount != null">
                login_count=#{loginCount},
            </if>
            <if test="gmtLastLogin != null">
                gmt_last_login=#{gmtLastLogin},
            </if>
        </set>
        WHERE id=#{id}
    </update>

    <!--    int countByName(String name);-->
    <select id="countByUsername" resultType="int">
        select COUNT(*)
        FROM ams_admin
        WHERE username = #{username}
    </select>

    <!--    int countByEmail(String email);-->
    <select id="countByEmail" resultType="int">
        select COUNT(*)
        FROM ams_admin
        WHERE email = #{email}
    </select>

    <!--    int countByPhone(String phone);-->
    <select id="countByPhone" resultType="int">
        select COUNT(*)
        FROM ams_admin
        WHERE phone = #{phone}
    </select>


    <!--    * 获取管理员数据-->
    <!--    AdminStandardVO getStandardById(Long id);-->
    <select id="getStandardById" resultType="AdminStandardVO">
        SELECT id,
               username,
               password,
               nickname,
               avatar,
               phone,
               email,
               description,
               enable,
               last_login_ip,
               login_count
        FROM ams_admin
        WHERE id = #{id}
    </select>

    <!--    * 查询管理员列表-->
    <!--    List<AdminListItemVO> list();-->
    <select id="list" resultType="AdminListItemVO">
        SELECT id,
               username,
               password,
               nickname,
               avatar,
               phone,
               email,
               description,
               enable,
               last_login_ip,
               login_count,
               gmt_last_login
        FROM ams_admin
        ORDER BY enable desc, id
    </select>

    <!--    * 管理员登录-->
    <!-- AdminLoginInfoVO getLoginInfoByUsername(String username); -->
    <select id="getLoginInfoByUsername" resultMap="LoginResultMap">
        SELECT
        <include refid="LoginQueryFields"/>
        FROM
        ams_admin
        LEFT JOIN ams_admin_role ON ams_admin.id=ams_admin_role.admin_id
        LEFT JOIN ams_role_permission ON ams_admin_role.role_id=ams_role_permission.role_id
        LEFT JOIN ams_permission ON ams_role_permission.permission_id=ams_permission.id
        WHERE
        username=#{username}
    </select>

    <sql id="LoginQueryFields">
        <if test="true">
            ams_admin.id,
            ams_admin.username,
            ams_admin.password,
            ams_admin.enable,
            ams_permission.value
        </if>
    </sql>


    <!-- 当涉及1个多查询时，需要使用collection标签配置List集合类型的属性 -->
    <!-- collection标签的property属性：类中List集合的属性的名称 -->
    <!-- collection标签的ofType属性：类中List集合的元素类型的全限定名 -->
    <!-- collection标签的子级：需要配置如何创建出一个个元素对象 -->
    <!-- constructor标签：将通过构造方法来创建对象 -->
    <!-- constructor标签子级的arg标签：配置构造方法的参数 -->
    <resultMap id="LoginResultMap" type="AdminLoginInfoVO">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="enable" property="enable"/>
        <collection property="permissions" ofType="java.lang.String">
            <constructor>
                <arg column="value"/>
            </constructor>
        </collection>
    </resultMap>


</mapper>